buildscript {
   repositories {
       gradlePluginPortal()
   }

   dependencies {
       classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE'
       classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
       classpath 'com.bmuschko:gradle-docker-plugin:3.6.1'
   }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-spring-boot-application'
apply from: 'gradle/test-setup.gradle'
apply from: 'gradle/integration-test.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

repositories {
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtime 'com.h2database:h2'
    runtime 'org.postgresql:postgresql:42.2.5'
}

ext {
    dockerUsername = getConfigurationProperty('DOCKER_USERNAME', 'dockerHubUsername')
    dockerPassword = getConfigurationProperty('DOCKER_PASSWORD', 'dockerHubPassword')
    dockerEmail = getConfigurationProperty('DOCKER_EMAIL', 'dockerHubEmail')
}

docker {
    registryCredentials {
        username = dockerUsername
        password = dockerPassword
        email = dockerEmail
    }
    springBootApplication {
        tag = "$dockerUsername/todo-web-service"
    }
}

String getConfigurationProperty(String envVar, String sysProp) {
    System.getenv(envVar) ?: project.findProperty(sysProp)
}